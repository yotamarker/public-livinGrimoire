package PKGsystemClasses;

import java.util.ArrayList;
import java.util.Random;

public class APMoan extends AbsAlgPart {
	// TODO : create active fuck counter parameter for this class :-)
	// this class is responsible to trigger the right moan
	private ArrayList<String> moans; // automatic moan :
	/*
	 * such as : come on lets fuck please oh me so horney
	 */
	private ArrayList<String> interActiveMoans;
	/*
	 * this will link to inter active convo like moans such as : fuck yeah feels
	 * good ahhhhh weeeeee all moans must be linked to actual audio
	 */
	private Boolean isCompleted = false; // the user has jizzed 8)
	private PlayGround watch; // used to get seconds here
	// I want a pause between moans so it looks like the app needs to breath
	private boolean Acted;
	private String todo = "";

	public APMoan() {
		// c'tor
		super();
		watch = new PlayGround();
		Acted = false;
		this.moans = new ArrayList<>();
		this.interActiveMoans = new ArrayList<>();
		moans.add("moan0");// example moans (more can be added)
		moans.add("moan1");
		moans.add("moan2");

		interActiveMoans.add("IMoan1"); // inter active moans (doll was moved) or told something
		interActiveMoans.add("IMoan2");
		interActiveMoans.add("IMoan3");

		moans.add("thank you"); // user jizzed (conclusion after fuck)

	}

	@Override
	public String action(String input) {
		// where the actual action takes place (the meat of this class)
		// the sysout is a temporary methode stub
		String axnStr = "";
		if (input.equals("thank you") || this.interActiveMoans.contains(input)) {
			this.todo = input;
		}
		int sec = watch.getSecondsAsInt(); // will be commented out
		// axnStr = sec + "";
		if (!this.Acted) {
			// (time div (moan duration + extra tolerance time)) mod 2 == 0
			if ((sec / 10) % 2 == 0) {
				Acted = true;
				if (this.equals("thank you")) {
					playMoan("finish");
					this.isCompleted = true;
					this.todo = "";
					return axnStr;
				}
				if (interActiveMoans.contains(this.todo)) {
					playMoan(this.todo);
					this.todo = "";
					return axnStr;
				}
				Random rand = new Random();
				int x = rand.nextInt(moans.size() - 1);

				playMoan("moan num " + x);
				// Acted = true;
			}
		} else {
			this.Acted = false;
		}
		return axnStr;
	}

	private void playMoan(String input) {
		// TODO Auto-generated method stub
		// System.out.println(input);

	}

	@Override
	public String failure(String input) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean completed() {
		// TODO Auto-generated method stub
		return isCompleted;
	}

	@Override
	public AbsAlgPart clone() {
		// TODO Auto-generated method stub
		return new APMoan();
	}

}
