package LivinGrimoire;

import java.util.ArrayList;
import java.util.Hashtable;

public class Personality {
    /*
     * this class contains skills
     * you can add skills and you can remove skills from this object.
     * this object is fed into the Chobit c'tor, giving the chobit object skills
     */
    protected Kokoro kokoro = new Kokoro(new AbsDictionaryDB()); // soul
    protected ArrayList<DiSkillV2> dClasses = new ArrayList<>();// can engage with anyone
    protected Hashtable<String, Integer> algDurations = new Hashtable<>();
    protected Fusion fusion;

    // fusion.getReqOverload() // an overload of requests on the brain
    // fusion.getRepReq() // someone is negging and asking the same thing over and
    // over again
    /*
     * flight or fight skills may need access to the above fusion class booleans on
     * the output methode of a skill this skills will load algorithms to the highest
     * priority of the noiron which carries algorithms :
     * noiron.negativeAlgParts.add(Algorithm)
     */

    public Personality() {
             this.fusion = new Fusion(this.algDurations);
    }

    public void setDataBase(AbsDictionaryDB absDictionaryDB) {
        this.kokoro = new Kokoro(absDictionaryDB);
    }
    public void loadAlgDurations(Hashtable<String, Integer> algDurations){
        // these are the run times of algorithms
        this.algDurations = algDurations;
        // algDurations are shallow ref to Fusions' algDurations
        // shorter algDurations give algorithms run priority in case several algorithms(sent by skills) want to run
        // at the same time
    }
    public Fusion getFusion() {
        return fusion;
    }
    public Personality addSkill(DiSkillV2 skill){
        // add a skill (builder design patterned func))
        this.dClasses.add(skill);
        return this;
    }
    public void clearSkills(){
        // remove all skills
        this.dClasses.clear();
    }
    public void addSkills(DiSkillV2... skills){
        for(DiSkillV2 skill:skills){
            this.dClasses.add(skill);
        }
    }
    public ArrayList<DiSkillV2> getdClassesLv1() {
        return dClasses;
    }

    public Kokoro getKokoro() {
        return kokoro;
    }
    public Hashtable<String, Integer> getAlgDurations() {
        return algDurations;
    }

    public void setAlgDurations(Hashtable<String, Integer> algDurations) {
        this.algDurations = algDurations;
    }
}