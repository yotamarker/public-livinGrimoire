the incantation 0 living grimoire experiment is meant to show case 2 specific abilities of the living grimoire software design pattern.
the first is the ability to postpone the run of an algorithm while another algorithm is actively running.

to test the postpone ability, there is a skill with these 2 abilities:
1) the ability to recite the ainz incantation, which is a long algorithm, meaning it takes several cycles to complete. 1 cycle per spell cast :

>case "incantation 0":
>               setSimpleAlg("fly","bless of magic caster","infinity wall", "magic ward holy","life essence");

2) the second ability in the DiTime skill is a short algorithm, in this experiment, "what is the time", which outputs, you guessed it, the current time

so what happens is, while one algorithm is running a second is set on stand by, to run after the 1st one finishes:

>b1.hardwareChobit.addSkill(new DiSysOut());
>b1.logicChobit.addSkill(new DiTime());
>b1.doIt("incantation 0","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("what is the time","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");

fly
bless of magic caster
infinity wall
magic ward holy
life essence
12:32

there is more!
I can change the algorithm priority:

>           case "what is the time":
>               setVerbatimAlg(3, pl.getCurrentTimeStamp());
>               return;

in this case the priority of the short alg(telling the time) is lower(3) than the long algorithm's priority(4)
which gives the shorter alg priority to run over the long algorithm.

>b1.hardwareChobit.addSkill(new DiSysOut());
>b1.logicChobit.addSkill(new DiTime());
>b1.doIt("incantation 0","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("what is the time","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");
>b1.doIt("","","");[/CODE]
fly
bless of magic caster
infinity wall
14:34
magic ward holy
life essence

the alg with the lower numeric value does not wait for the higher priority active alg to finish.

for example in nature flight or flight algorithms have a higher priority to run.