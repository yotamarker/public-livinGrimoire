from abc import ABC, abstractmethod

class AbsDictionaryDB(ABC):
    @abstractmethod
    def save(self, key: str, value: str):
        '''Returns action string'''
        pass

    @abstractmethod
    def load(self, key: str) -> str:
        '''TODO set to return null as default if key not found !!!'''
        pass

class AbsDictionaryDBShadow(AbsDictionaryDB):
    '''used as a fill in class if you want to test the chobit and havent built a DB class yet'''
    # Override
    def save(self, key: str, value: str):
        pass
    
    #Override
    def load(self, key: str) -> str:
        return "null"

if __name__ == "__main__":
    test = AbsDictionaryDBShadow()
    print(test.load("hello"))