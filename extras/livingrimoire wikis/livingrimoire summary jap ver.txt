**リビング・グリモワール（The Living Grimoire）**は、人工知能（Artificial General Intelligence）ソフトウェアのデザインパターンである。
Moti Barski**によって作成されました。

***

<ref>yotamarker.com</ref> の battle programmers forum で公開されました。

にあるgithubで公開されています。
<ref>https://github.com/yotamarker/public-livinGrimoire</ref> にあります。

2022年5月現在、このプロジェクトはいくつかのプログラミング言語で利用可能です。
を含む。

Java
コトリン
パイソン

## 動作原理 :

生活魔道書(チョビットクラス)のインスタンスにスキルやアビリティを追加することができる。
個性クラスのオブジェクトインスタンスを通じて、たった1行のコードで追加できる

映画「マトリックス」の学習シーンのように、ネオの頭の中にスキルや能力がインストールされ
カンフーのようなスキルを身につけるシーンがあります。

スキルのロジックは、そのスキル自身の中に保持されます。

条件が満たされると、スキルはトリガーされ、アルゴリズムを送信します。
アルゴリズム・パーツと呼ばれる動作のリストが送られ、実行されます。

ブレインクラスは、メインクラスが乱雑になる問題を解決するために作られました。
ブレインクラスは、メインクラスが乱雑になる問題を解決するために作成され、例えば、出力された文字列を音声に変換するようなハードウェアロジックコードをすべて保持するために使用することができます。
の出力テキストを音声に変換するなど、すべてのハードウェアロジックコードを保持するために使用されます。

## リビンググリモアの目的

1 コーディングを簡単にする。
1行のコードでスキルを追加する、1行のコードでスキルを選択する、といった具合に
または、スキルセットであるパーソナリティを選択するために1行のコードを使用することです。

2.組織
リビング・グリモアの能力は、それぞれのスキルにきちんとパッケージされています。

3 リビンググリモアは、ワイフボットを開発するために開発された。
ユーザーは、Living Grimoireのフォーラムでスキルを公開したり、スキルのデモを販売したりすることができます。
スキルのデモを投稿し、販売することができます。

このように、ユーザーは自分のワイフボットに必要なスキルやハードウェアを選択することができます。
このように、ユーザーは自分のワイフボットに必要なスキルやハードウェアを選び、1行のコードでそのスキルを追加することができます。

4 コラボレーションのしやすさ

共同作業を行うには、以下の手順が必要です。
その人のスキルを1行のコードでリビング・グリモアのインスタンスに追加する。

## Alexa、Bixby、Siriなどのアシスタントとリビング・グリモアの主な相違点

1. 1行のコードでどんなスキルも吸収する素早い能力
2. スキル間の融合とコミュニケーション :
複数のスキルが同時に動作し、必要に応じて一時停止や再開が可能。
3. スキルの優先順位：例えば、戦闘型スキルや逃走型スキルなど
AIにとって最も大切なものを守るために、他のスキルよりも優先的に使用することができます。
4. 目標達成のための多段階のアルゴリズムが可能
5. 行動は失敗すると変異することがある。
6.スキルレベル1と2は、チョビットネームや隠れネームを使用する必要がある。
スキルレベル0では、特別な許可は必要ありません。
7.検閲がない。
8. ステップバイステップのwalkthroughedドキュメント
9. カスタマイズ可能なTTS

## ハローワールドの例 (python main):

https://github.com/yotamarker/public-livinGrimoire/blob/master/livingrimoire%20start%20here/LivinGrimoire%20python/python_core_txt/main%20livingrimoire%20test%20example.txt

## the Living Grimoire クラスリスト

1. AbsDictionaryDB
2. AbsDictionaryDBShadow
3. enumFail
4. Mutatable
5. T1, T2 (test classes) //// used for testing. not core classes
6. AbsAlgPart
7. APSay
8. APVerbatim
9. Person //not core class
10. enumTimes
11. PlayGround // not core class
12. GrimoireMemento
13. Algorithm
14. CldBool
15. APCldVerbatim
16. Kokoro
17. Chi
18. Neuron
19. DISkillUtils
20. DiSkillV2
21. Point // not core class
22. RegexUtil // not core class
23. ZeroTimeGate
24. Cerabellum
25. DExplorer(DiSkillV2)
26. PriorityQueue
27. Fusion
28. FusionCera
29. Thinkable
30. Actionable
31. Brain
32. PersonalityLight
33. ChobitsLight(Thinkable)
34. DiHelloWorld(DiSkillV2) // used for testing. not a core class

LivinGrimoireに関する書籍:
![](https://i.ibb.co/61fWWnv/3d-Mockup.png)
1 the living grimoire by Moti Barski : 例を交えた詳しい説明です。
リビング魔道書プロジェクトについて

https://github.com/yotamarker/public-livinGrimoire/blob/master/livingrimoire%20start%20here/the%20living%20grimoie.pdf

![](https://i.ibb.co/3kYrpKs/Moti-3-D-Mockup.jpg)
2 リビング・グリモアのための補助モジュール Moti Barski著。
文章を書きやすくし、ワイフボットをより人間らしくするためのモジュール

https://github.com/yotamarker/public-livinGrimoire/blob/master/livingrimoire%20start%20here/Auxiliary%20Modules%20for%20the%20livingrimoire.pdf